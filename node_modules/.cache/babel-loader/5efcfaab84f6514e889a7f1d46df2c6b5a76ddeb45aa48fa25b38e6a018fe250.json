{"ast":null,"code":"var _jsxFileName = \"/Users/andrewbrowne/Desktop/gamepractice/games/src/components/shooter.js\";\nimport React from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shooter = () => {\n  class Thre {\n    constructor(mountRef) {\n      // Set up the scene, camera, and renderer\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      this.camera.position.set(0, 0, 4);\n\n      // Set up lights\n      const ambientLight = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 0.5);\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n      directionalLight.position.set(0.2, 1, 1);\n      this.scene.add(ambientLight);\n      this.scene.add(directionalLight);\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.renderer.setAnimationLoop(this.render.bind(this));\n      this.scene.background = new THREE.Color(0xaaaaaa);\n\n      // Create star geometry\n      const geometry = this.createStarGeometry();\n      const material = new THREE.MeshStandardMaterial({\n        color: 0xff0000\n      });\n      this.mesh = new THREE.Mesh(geometry, material);\n      this.scene.add(this.mesh);\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n      // Append the renderer to the DOM\n      if (mountRef.current) {\n        mountRef.current.appendChild(this.renderer.domElement);\n      } else {\n        console.error('Mount reference not found');\n        return;\n      }\n    }\n\n    // Create star geometry function\n    createStarGeometry(innerRadius = 0.4, outerRadius = 0.8, points = 5) {\n      const shape = new THREE.Shape();\n      const PI2 = Math.PI * 2;\n      const inc = PI2 / (points * 2);\n      let inner = true;\n      shape.moveTo(outerRadius, 0); // Start at the outer radius point\n\n      for (let theta = inc; theta < PI2; theta += inc) {\n        const radius = inner ? innerRadius : outerRadius;\n        shape.lineTo(Math.cos(theta) * radius, Math.sin(theta) * radius);\n        inner = !inner;\n      }\n      shape.lineTo(outerRadius, 0); // Close the shape\n\n      return new THREE.ShapeGeometry(shape);\n    }\n\n    // Render function\n    render() {\n      this.mesh.rotateY(0.01);\n      this.renderer.render(this.scene, this.camera);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\nexport default shooter;","map":{"version":3,"names":["React","THREE","jsxDEV","_jsxDEV","shooter","Thre","constructor","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","ambientLight","HemisphereLight","directionalLight","DirectionalLight","add","renderer","WebGLRenderer","antialias","setSize","setAnimationLoop","render","bind","background","Color","geometry","createStarGeometry","material","MeshStandardMaterial","color","mesh","Mesh","controls","OrbitControls","domElement","current","appendChild","console","error","innerRadius","outerRadius","points","shape","Shape","PI2","Math","PI","inc","inner","moveTo","theta","radius","lineTo","cos","sin","ShapeGeometry","rotateY","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/andrewbrowne/Desktop/gamepractice/games/src/components/shooter.js"],"sourcesContent":["import React from 'react';\nimport * as THREE from 'three';\nconst shooter = () => {\n    class Thre {\n        constructor(mountRef) {\n          // Set up the scene, camera, and renderer\n          this.scene = new THREE.Scene();\n          this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n          this.camera.position.set(0, 0, 4);\n    \n          // Set up lights\n          const ambientLight = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 0.5);\n          const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n          directionalLight.position.set(0.2, 1, 1);\n    \n          this.scene.add(ambientLight);\n          this.scene.add(directionalLight);\n    \n          this.renderer = new THREE.WebGLRenderer({ antialias: true });\n          this.renderer.setSize(window.innerWidth, window.innerHeight);\n          this.renderer.setAnimationLoop(this.render.bind(this));\n          this.scene.background = new THREE.Color(0xaaaaaa);\n    \n          // Create star geometry\n          const geometry = this.createStarGeometry();\n          const material = new THREE.MeshStandardMaterial({ color: 0xff0000 });\n          this.mesh = new THREE.Mesh(geometry, material);\n          this.scene.add(this.mesh);\n    \n          this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    \n          // Append the renderer to the DOM\n          if (mountRef.current) {\n            mountRef.current.appendChild(this.renderer.domElement);\n          } else {\n            console.error('Mount reference not found');\n            return;\n          }\n    \n       \n        }\n    \n        // Create star geometry function\n        createStarGeometry(innerRadius = 0.4, outerRadius = 0.8, points = 5) {\n          const shape = new THREE.Shape();\n          const PI2 = Math.PI * 2;\n          const inc = PI2 / (points * 2);\n    \n          let inner = true;\n          shape.moveTo(outerRadius, 0); // Start at the outer radius point\n    \n          for (let theta = inc; theta < PI2; theta += inc) {\n            const radius = inner ? innerRadius : outerRadius;\n            shape.lineTo(Math.cos(theta) * radius, Math.sin(theta) * radius);\n            inner = !inner;\n          }\n    \n          shape.lineTo(outerRadius, 0); // Close the shape\n    \n          return new THREE.ShapeGeometry(shape);\n        }\n    \n        // Render function\n        render() {\n          this.mesh.rotateY(0.01);\n          this.renderer.render(this.scene, this.camera);\n        }\n      }\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default shooter\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAClB,MAAMC,IAAI,CAAC;IACPC,WAAWA,CAACC,QAAQ,EAAE;MACpB;MACA,IAAI,CAACC,KAAK,GAAG,IAAIP,KAAK,CAACQ,KAAK,CAAC,CAAC;MAC9B,IAAI,CAACC,MAAM,GAAG,IAAIT,KAAK,CAACU,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;MAChG,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;MAEjC;MACA,MAAMC,YAAY,GAAG,IAAIhB,KAAK,CAACiB,eAAe,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC;MACvE,MAAMC,gBAAgB,GAAG,IAAIlB,KAAK,CAACmB,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC;MAChED,gBAAgB,CAACJ,QAAQ,CAACC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;MAExC,IAAI,CAACR,KAAK,CAACa,GAAG,CAACJ,YAAY,CAAC;MAC5B,IAAI,CAACT,KAAK,CAACa,GAAG,CAACF,gBAAgB,CAAC;MAEhC,IAAI,CAACG,QAAQ,GAAG,IAAIrB,KAAK,CAACsB,aAAa,CAAC;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC;MAC5D,IAAI,CAACF,QAAQ,CAACG,OAAO,CAACb,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;MAC5D,IAAI,CAACQ,QAAQ,CAACI,gBAAgB,CAAC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MACtD,IAAI,CAACpB,KAAK,CAACqB,UAAU,GAAG,IAAI5B,KAAK,CAAC6B,KAAK,CAAC,QAAQ,CAAC;;MAEjD;MACA,MAAMC,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAAC,CAAC;MAC1C,MAAMC,QAAQ,GAAG,IAAIhC,KAAK,CAACiC,oBAAoB,CAAC;QAAEC,KAAK,EAAE;MAAS,CAAC,CAAC;MACpE,IAAI,CAACC,IAAI,GAAG,IAAInC,KAAK,CAACoC,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;MAC9C,IAAI,CAACzB,KAAK,CAACa,GAAG,CAAC,IAAI,CAACe,IAAI,CAAC;MAEzB,IAAI,CAACE,QAAQ,GAAG,IAAIC,aAAa,CAAC,IAAI,CAAC7B,MAAM,EAAE,IAAI,CAACY,QAAQ,CAACkB,UAAU,CAAC;;MAExE;MACA,IAAIjC,QAAQ,CAACkC,OAAO,EAAE;QACpBlC,QAAQ,CAACkC,OAAO,CAACC,WAAW,CAAC,IAAI,CAACpB,QAAQ,CAACkB,UAAU,CAAC;MACxD,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;QAC1C;MACF;IAGF;;IAEA;IACAZ,kBAAkBA,CAACa,WAAW,GAAG,GAAG,EAAEC,WAAW,GAAG,GAAG,EAAEC,MAAM,GAAG,CAAC,EAAE;MACnE,MAAMC,KAAK,GAAG,IAAI/C,KAAK,CAACgD,KAAK,CAAC,CAAC;MAC/B,MAAMC,GAAG,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC;MACvB,MAAMC,GAAG,GAAGH,GAAG,IAAIH,MAAM,GAAG,CAAC,CAAC;MAE9B,IAAIO,KAAK,GAAG,IAAI;MAChBN,KAAK,CAACO,MAAM,CAACT,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;;MAE9B,KAAK,IAAIU,KAAK,GAAGH,GAAG,EAAEG,KAAK,GAAGN,GAAG,EAAEM,KAAK,IAAIH,GAAG,EAAE;QAC/C,MAAMI,MAAM,GAAGH,KAAK,GAAGT,WAAW,GAAGC,WAAW;QAChDE,KAAK,CAACU,MAAM,CAACP,IAAI,CAACQ,GAAG,CAACH,KAAK,CAAC,GAAGC,MAAM,EAAEN,IAAI,CAACS,GAAG,CAACJ,KAAK,CAAC,GAAGC,MAAM,CAAC;QAChEH,KAAK,GAAG,CAACA,KAAK;MAChB;MAEAN,KAAK,CAACU,MAAM,CAACZ,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;;MAE9B,OAAO,IAAI7C,KAAK,CAAC4D,aAAa,CAACb,KAAK,CAAC;IACvC;;IAEA;IACArB,MAAMA,CAAA,EAAG;MACP,IAAI,CAACS,IAAI,CAAC0B,OAAO,CAAC,IAAI,CAAC;MACvB,IAAI,CAACxC,QAAQ,CAACK,MAAM,CAAC,IAAI,CAACnB,KAAK,EAAE,IAAI,CAACE,MAAM,CAAC;IAC/C;EACF;EACJ,oBACEP,OAAA;IAAA4D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAED,eAAe9D,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}